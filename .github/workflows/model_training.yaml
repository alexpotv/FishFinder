name: Model Training
on:
  pull_request:
    branches:
      - dev
jobs:
  deploy-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: iterative/setup-cml@v1
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Deploy runner on GCP Compute Engine instance
        env:
          REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS_DATA: ${{ secrets.GCP_APP_CREDENTIALS_DATA }}
        run: |
          cml runner --labels=cml-cpu --single --cloud=gcp --cloud-region=us-west1-b --cloud-type=n1-standard-1
  train-model:
    runs-on: cml-cpu
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v1
      - id: 'clone_yolov5'
        name: 'Clone YoloV5 locally'
        run: |
          git clone https://github.com/ultralytics/yolov5.git
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.8.0'
        with:
          credentials_json: ${{ secrets.GCLOUD_CREDENTIALS }}
      - id: 'install_requirements'
        name: 'Install requirements'
        run: |
          pip install -r requirements.txt
          pip install -r yolov5/requirements.txt
          apt-get update && apt-get install libgl1
      - id: 'dvc_pull'
        name: 'Pull data from remote'
        run: |
          pip install -r requirements.txt
          dvc pull
      - id: 'dvc_repro'
        name: 'Reproduce all stages of DVC pipeline'
        run: |
          dvc repro -f
